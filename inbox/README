=============
This project contains workloads for use in scale & performance testing. 
There are 3 different implementations of an "inbox" pattern. 

1) Fan out on read 
This is the naive approach to an inbox. Sending a message involves writing that message to the database. Reading an inbox requires finding all of the messages where the user's id is in the "to" field and sorting by time. 

2) Fan out on write 
Sending a message involves making a copy of the message for each recipient. Reading an inbox still requires finding all of the messages where the user's id is in the "owner" field, but we expect better locality of reads across shards. 

3) Bucketed fan out on write. 
Sending a message involves pushing the message onto an array field in the user's "inbox" document for each recipient in the message". Reading the inbox involves fetching just the inbox document which contains the messages in sorted order. This model exhibits better data locality on a single node. 

Setting up the tools on Mac OS X 
================================

sudo pip install -U multi-mechanize
brew install pkg-config
brew install libpng
brew install freetype
export LDFLAGS="-L/usr/X11/lib"
export CFLAGS="-I/usr/X11/include -I/usr/X11/include/freetype2 -I/usr/X11/include/libpng12"
sudo pip install matplotlib


